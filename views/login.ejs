<%- include("partials/htmlHead.ejs") -%>

    <title>SEO Master - SEO Agency Website Template</title>
    <!-- <link rel="stylesheet/less" type="text/css" href="/assets/signupSelectStyle.less" />
    <script src="/assets/less.js" type="text/javascript"></script> -->

</head>

<body>
    <div class="container-xxl bg-white p-0">
        <!-- Spinner Start -->
        <!-- <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div> -->
        <!-- Spinner End -->


        <!-- Navbar & Hero Start -->
        <div class="container-xxl position-relative p-0">
            <nav class="navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0">
              <a href="" class="navbar-brand p-0 animated flash">
                <h1 class="m-0 "><i class="fa fa-lightbulb me-2 "></i>Hyper <span class="fs-5"> Physics</span></h1>
                <!-- <img src="img/logo.png" alt="Logo"> -->
              </a>  
            </nav>

            

            <div class="container-xxl py-5 hero-header-login mb-5 d-flex justify-content-around align-content-around">
                
              <div class="container text-center my-5 py-5 px-lg-5">
                   
                  <div class="row g-5 py-5">
                      
                      <div class="col-lg-9 text-center text-lg-start">
                      
                            <!-- <a href="" class="btn btnheadstyle  py-sm-3 px-sm-5 rounded-pill animated slideInRight"> </a> -->
                                <section class="wrapper col-sm-3 col-xl-12 animated fadeInDownBig">
                                  <div class="form signup ">
                                    <header>هل تريد الاشتراك ؟</header>
                                    <form action="/" class="signupData">
                                      <input type="text" placeholder="الاسم الاول " id="firstName" name="firstName" class="input form-control" maxlength="20"  pattern="[A-Za-z]+" required />
                                      <div class="invalid-feedback firstNameError">
                                        الرجاء إدخال الاسم الأول بشكل صحيح محتويا على حروف فقط
                                      </div>  
                                      
                                      <input type="text" placeholder="الاسم الاخير " id="lastName" name="lastName" class="input form-control" maxlength="20" pattern="[A-Za-z]+" required />
                                      <div class="invalid-feedback lastnameNameError">
                                        الرجاء إدخال الاسم الأخير بشكل صحيح محتويا على حروف فقط
                                      </div>  
                                      
                                      <input id="email" name="email" placeholder="الإيميل" type="text" class="input" maxlength="30" required>
                                      <div class="email error"></div>

                                      <input type="password" placeholder=" كلمة السر  " id="passwordSignup" name="password" type="password" class="input form-control" minlength="8" maxlength="30" required />
                                      <div class="password error"></div>
                                      <div class="invalid-feedback passwordError">
                                      الرجاء إدخال كلمة المرور بحد أدنى 8 خانات وحد أقصى 30 خانة متضمنة على الأقل: حرف واحد، رقم واحد، رمز واحد
                                      </div>

                                      <input type="text" placeholder=" السن " id="age" name="age" class="input form-control" min="10" max="19" minlength="2" maxlength="2" required />
                                      <div class="invalid-feedback ageError">
                                        الرجاء إدخال عمر مناسب من 10 إلى 19 سنة
                                      </div>

                                      <!-- <div class="wrapper">
                                        <select name="characters eduLevel" class="custom-select eduLevel" tabindex="1" id="eduLevel" reuired>
                                            <option value="1">الصف الأول الثانوي</option>
                                            <option value="2">الصف الثاني الثانوي</option>
                                            <option value="3">الصف الثالث الثانوي</option>
                                        </select>
                                      </div> -->

                                      <input type="text" placeholder="رقم الهاتف " id="phoneNumberSignup" name="phoneNumber" class="input form-control" pattern="^(010|011|012|015)\d{8}$" maxlength="11" required />
                                      <div class="invalid-feedback phoneError">
                                        الرجاء إدخال رقم الموبايل بشكل صحيح متضمنا 11 خانة
                                     </div>
                                     <div class="phoneError" style="color: rgb(222,56,69);">
                                     </div>

                                      <input type="text" placeholder="رقم هاتف ولي الامر  " id="parentPhoneNumber" name="parentPhoneNumber" class="input form-control" pattern="^(010|011|012|015)\d{8}$" maxlength="11" required />
                                      <div class="invalid-feedback parentPhoneError">
                                        الرجاء إدخال رقم الموبايل بشكل صحيح متضمنا 11 خانة
                                        </div>
                                        <div class="parentPhoneError" style="color: rgb(222,56,69);">
                                        </div>  

                                      <div class="checkbox">
                                        <input type="checkbox" id="signupCheck" />
                                        <label for="signupCheck">البقاء متصلا</label>
                                      </div>
                                      <input type="submit" value="اشتراك" />
                                    </form>
                                  </div>
                            
                                  <div class="form login" id="login">
                                    <header class="fs-4">لتسجيل الدخول اضغط هنا</header>
                                    <form action="/"class="loginData">
                                      <input type="text" id="phoneNumber" name="phoneNumber" placeholder="رقم الموبايل " required />
                                      <div class="errorPhone"></div>
                                      <input type="password" placeholder="كلمة السر " id="password" name="password" class="input password error" data-type="password" required />
                                      <div class="errorPassword text-danger"></div>
                                      <a href="#">هل نسيت كلمة السر؟</a>
                                      <input type="submit" class="button" value="تسجيل الدخول">

                                    </form>
                                  </div>
                            
                                  <script>
                                    const wrapper = document.querySelector(".wrapper"),
                                      signupHeader = document.querySelector(".signup header"),
                                      loginHeader = document.querySelector(".login header");
                            
                                    loginHeader.addEventListener("click", () => {
                                      wrapper.classList.add("active");
                                    });
                                    signupHeader.addEventListener("click", () => {
                                      wrapper.classList.remove("active");
                                    });
                                  </script>
                                </section>
                        
                        </div>
                        <div class="col-lg-6 text-center text-lg-start">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 d-lg-block d-none text-center text-lg-start animated lightSpeedIn" style="position: relative; top: 100px; ">
                  <img class="img-fluid scientist" style="position: relative; top: 250px;" src="/assets/img/24784265_vif2_4m00_220302-removebg-preview.png" alt="">
                </div>
            </div>
        </div>
        <!-- Navbar & Hero End -->
               
        <!-- Footer End -->
        <%- include("partials/footer.ejs") -%>


    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://fastly.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/lib/wow/wow.min.js"></script>
    <script src="/assets/lib/easing/easing.min.js"></script>
    <script src="/assets/lib/waypoints/waypoints.min.js"></script>
    <script src="/assets/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/assets/lib/isotope/isotope.pkgd.min.js"></script>
    <script src="/assets/lib/lightbox/js/lightbox.min.js"></script>

    <!-- Template Javascript -->
    <script src="/assets/js/main.js"></script>


    <!-- Login validation -->
    <script>
      const form = document.querySelector('.loginData');
      const phoneNumber = document.querySelector('#phoneNumber');
      const password = document.querySelector('#password');
      const phoneError = document.querySelector('.errorPhone');
      const passwordError = document.querySelector('.errorPassword');

    
      form.addEventListener('submit', async (e) => {
           e.preventDefault();

        // get values
          const phoneNumber = form.phoneNumber.value;
          const password = form.password.value;
          console.log(phoneNumber);
          console.log(password);

          try {
          const res = await fetch ("/login", {
          method: "POST",
          body: JSON.stringify({ phoneNumber , password}),
          headers: {"Content-Type":"application/json"}
          });
          const data = await res.json();
          console.log(data);
          console.log(data.errors);
          if (data.errors) {
                  // emailError.textContent = data.errors.email;
                  passwordError.textContent = data.errors.password || data.errors.phoneNumber;
                }
          if(data.student){
            location.assign("/");
          }

          } catch (error) {
              // res.status(400).JSON({error});
              console.log(error);
          }  
    });
    </script>



    <!-- signup validation -->

    <script>

      document.addEventListener('DOMContentLoaded', function() {
        //  document.querySelector('.invalid-feedback').style.display = 'none';
        const form = document.querySelector('.signupData');
        
        const firstNameElement = document.getElementById("firstName");
        const lastNameElement = document.getElementById("lastName");
        const passwordElement = document.getElementById("passwordSignup");
        const phoneNumberElement = document.getElementById("phoneNumberSignup");
        const parentPhoneNumberElement = document.getElementById("parentPhoneNumber");
        const ageElement = document.getElementById("age");
        // const eduLevelElement = document.getElementById("eduLevel");
      
        const emailError = document.querySelector('.email.error');
        const phoneError = document.querySelector('.phoneError');
        const parentPhoneError = document.querySelector('.parentPhoneError');
      
        // first name validation
        firstNameElement.addEventListener('input', function(e) {
        e.preventDefault();
        const firstNameValue = firstNameElement.value;
        // console.log(firstNameValue);
        if(firstNameValue.trim() === ''){
          firstNameElement.classList.remove("is-valid");
          firstNameElement.classList.add("is-invalid", "firstNameError");
        }else{
          if (/[^a-zA-Z]/.test(firstNameValue)) {
          firstNameElement.classList.remove("is-valid");
          firstNameElement.classList.add("is-invalid", "firstNameError");
        }else {
          firstNameElement.classList.remove("is-invalid", "firstNameError");
          firstNameElement.classList.add("is-valid");
        }
        }
      });
      
      // last name validation
      lastNameElement.addEventListener('input', function(e) {
        e.preventDefault();
        const lastNameValue = lastNameElement.value;
        // console.log(lastNameValue);
        if(lastNameValue.trim() === ''){
          lastNameElement.classList.remove("is-valid");
          lastNameElement.classList.add("is-invalid");
        }else{
        if (/[^a-zA-Z]/.test(lastNameValue)) {
          lastNameElement.classList.remove("is-valid");
          lastNameElement.classList.add("is-invalid");
        } else {
          lastNameElement.classList.remove("is-invalid");
          lastNameElement.classList.add("is-valid");
        }
        }
      });
      
      
      // password validation
      passwordElement.addEventListener('input', function(e) {
        e.preventDefault();
        const passwordValue = passwordElement.value;
        console.log(passwordValue);
        console.log(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/.test(passwordValue));
        
        if(passwordValue.trim() === ''){
          passwordElement.classList.remove("is-valid");
          passwordElement.classList.add("is-invalid");
        }else{
          // const passwordRegex = "/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/";
          if (/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@!%#?&.])[A-Za-z\d@!%#?&.]{8,}$/.test(passwordValue)) {
            passwordElement.classList.remove("is-invalid");
            passwordElement.classList.add("is-valid");
          } else {
            passwordElement.classList.remove("is-valid");
            passwordElement.classList.add("is-invalid");
          }
        }
      });
      
      
      
      // phone validation
      phoneNumberElement.addEventListener('input', function(e) {
        e.preventDefault();
        const phoneValue = phoneNumberElement.value;
        // console.log(phoneValue);
        
        if(phoneValue.trim() === ''){
          phoneNumberElement.classList.remove("is-valid");
          phoneNumberElement.classList.add("is-invalid");
        }else{
          if (/^(010|011|012|015)\d{8}$/.test(phoneValue)) {
            phoneNumberElement.classList.remove("is-invalid");
            phoneNumberElement.classList.add("is-valid");
          } else {
            phoneNumberElement.classList.remove("is-valid");
            phoneNumberElement.classList.add("is-invalid");
          }
        }
      });
      
      // parentPhone validation
      parentPhoneNumberElement.addEventListener('input', function(e) {
        e.preventDefault();
        const parentPhoneValue = parentPhoneNumberElement.value;
        // console.log(phoneValue);
        
        if(parentPhoneValue.trim() === ''){
          parentPhoneNumberElement.classList.remove("is-valid");
          parentPhoneNumberElement.classList.add("is-invalid");
        }else{
          if (/^(010|011|012|015)\d{8}$/.test(parentPhoneValue)) {
            parentPhoneNumberElement.classList.remove("is-invalid");
            parentPhoneNumberElement.classList.add("is-valid");
          } else {
            parentPhoneNumberElement.classList.remove("is-valid");
            parentPhoneNumberElement.classList.add("is-invalid");
          }
        }
      });
      
      // age validation
      ageElement.addEventListener('input', function(e) {
        e.preventDefault();
        const ageValue = ageElement.value;
        
        if(ageValue.trim() === ''){
          ageElement.classList.remove("is-valid");
          ageElement.classList.add("is-invalid");
        }else{
          if (/^(1[0-9]|10)$/.test(ageValue)) {
            ageElement.classList.remove("is-invalid");
            ageElement.classList.add("is-valid");
          } else {
            ageElement.classList.remove("is-valid");
            ageElement.classList.add("is-invalid");
          }
        }
      });
      
      // at submit button and email checking
      
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
      
          emailError.textContent = '';
          phoneError.textContent = '';
          parentPhoneError.textContent = '';
          // get values
          console.log(form);
          const email = form.email.value;
          const password = form.password.value;
          const firstName = form.firstName.value;
          const lastName = form.lastName.value;
          const age = form.age.value;
          const phoneNumber = form.phoneNumber.value;
          const parentPhoneNumber = form.parentPhoneNumber.value;
          // const educationalLevel = form.eduLevel.value;
      
          const firstNameElement = document.getElementById("firstName");
          const lastNameElement = document.getElementById("lastName");
          const passwordElement = document.getElementById("password");
          const phoneNumberElement = document.getElementById("phoneNumber");
          const parentPhoneNumberElement = document.getElementById("parentPhoneNumber");
          const ageElement = document.getElementById("age");
          // const eduLevelElement = document.getElementById("eduLevel");
      
      
          try {
            if(parentPhoneNumber === phoneNumber){
              parentPhoneError.textContent = 'لا يمكن لرقم ولي الأمر ورقم الطالب أن يكونوا متطابقين';
            }else{
              if(email === '' || password === '' || firstName === '' || lastName === '' || age === '' || phoneNumber === '' || parentPhoneNumber === '' ){
                parentPhoneError.textContent = 'برجاء مليء كافة البيانات';
              }
              if(firstNameElement.classList.contains('invalid-feedback') || lastNameElement.classList.contains('invalid-feedback') || passwordElement.classList.contains('invalid-feedback') || 
              phoneNumberElement.classList.contains('invalid-feedback') || parentPhoneNumberElement.classList.contains('invalid-feedback') || ageElement.classList.contains('invalid-feedback') ){
                parentPhoneError.textContent = 'برجاء التحقق من كافة البيانات';
              }
              else{
                const res = await fetch ("/signup", {
              method: "POST",
              body: JSON.stringify({ firstName, lastName, email , password, age, phoneNumber, parentPhoneNumber}),
              headers: {"Content-Type":"application/json"}
            });
              const data = await res.json();
              // console.log(data);
              
              //validation for incorrect email
              if (data.message) {
                // console.log(data);
                // console.log(data.errors);
                // console.log(data.message);
                emailError.textContent = data.message;
                phoneError.textContent = data.message;
                parentPhoneError.textContent = data.message;
                }
      
              //validation for duplicated email
              if (data.errors) {
                  // console.log(data);
                  emailError.textContent = data.errors.email;
                  phoneNumberElement.classList.remove("is-invalid");
                  phoneError.textContent = '';
                  phoneError.textContent = data.errors.phoneNumber;
                  console.log(data.errors.phoneNumber);
                  parentPhoneNumberElement.classList.remove("is-invalid");
                  parentPhoneError.textContent = '';
                  parentPhoneError.textContent = data.errors.phoneNumber;
                  console.log(data.errors.parentPhoneError);
                  // passwordError.textContent = data.errors.password;
                }
      
                // //validation for invalid last name
                // if (data.message) {
                // // console.log(data);
                // // console.log(data.errors);
                // // console.log(data);
                // lastNameError.textContent = data;
                // }
      
              if(data.student){
      
                // to signup manually by updating the cookie to be empty and have very very short time expiration 
      
                location.assign("/login/#login");
              }
      
      
              }
              
            }
      
            
      
      }   catch (error) {
        
      }
      
        });
      
      
      });
      </script>
      <script src="/assets/signupSelectStyle.js"></script>


</body>

</html>