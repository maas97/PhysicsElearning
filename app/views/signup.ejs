<%- include("partials/htmlHead.ejs") -%>
<!-- Write here the title of the page -->
    <title>الاشتراك في المنصة</title>

<!-- write here the rest of the css custom style of this current page for example -->
   
 <!-- <link rel="stylesheet" href="/style.css">  -->

 <link rel="stylesheet" href="/assets/css/signupStyle.css">
 <link rel="stylesheet/less" type="text/css" href="/assets/signupSelectStyle.less" />
 <script src="/assets/less.js" type="text/javascript"></script>

  </head>

<body>
  

<%- include("partials/preloader.ejs") -%>
<%- include("partials/preheader.ejs") -%>
<%- include("partials/navbar.ejs") -%>



<div class="login-wrap">
	<div class="login-html">
		<input id="tab-1" type="radio" name="tab" class="sign-in" checked><label for="tab-1" class="tab">الاشتراك في المنصة</label>
		<input id="tab-2" type="radio" name="tab" class="for-pwd"><label for="tab-2" class="tab"></label>
		<div class="login-form">
			<div class="sign-in-htm">
        <form action="/">

          <div class="group">
            <label for="firstName" class="label">الاسم الأول</label>
            <input id="firstName" name="firstName" type="text" class="input form-control" maxlength="20"  pattern="[A-Za-z]+" required>
            <div class="invalid-feedback">
              الرجاء إدخال الاسم الأول بشكل صحيح محتويا على حروف فقط
            </div>            
          </div>


          <div class="group">
            <label for="lastName" class="label">الاسم الأخير</label>
            <input id="lastName" name="lastName" type="text" class="input form-control" maxlength="20" pattern="[A-Za-z]+" required>
            <div class="invalid-feedback">
              الرجاء إدخال الاسم الأول بشكل صحيح محتويا على حروف فقط
            </div>             
          </div>



          <div class="group">
            <label for="email" class="label">الإيميل</label>
            <input id="email" name="email" type="text" class="input" maxlength="30" required>
            <div class="email error"></div>
          </div>



          <div class="group">
            <label for="password" class="label">كلمة المرور</label>
            <input id="password" name="password" type="password" class="input form-control" minlength="8" maxlength="30" required>
            <div class="password error"></div>
            <div class="invalid-feedback">
            الرجاء إدخال كلمة المرور بحد أدنى 8 خانات وحد أقصى 30 خانة متضمنة على الأقل: حرف واحد، رقم واحد، رمز واحد
            </div>
          </div>


          <div class="group">
            <label for="age" class="label">العمر</label>
            <input id="age" name="age" type="number" class="input form-control" min="10" max="19" maxlength="2" required>
            <div class="invalid-feedback">
              الرجاء إدخال عمر مناسب من 10 إلى 19 سنة
            </div>
          </div>

          <!-- <div class="group">
            <label for="age" class="label">السنة الدراسية</label>
            <input id="age" name="age" type="number" class="input form-control" min="10" max="19" maxlength="2" required>
            <div class="invalid-feedback">
              الرجاء إدخال عمر مناسب من 10 إلى 19 سنة
            </div>
          </div>

          <div class="group">
            <label for="eduLevel" class="label">السنة الدراسية</label>
            <select id="eduLevel" name="eduLevel" required>
              <option value="">اختر سنة</option> 
              <option value="1">الصف الأول الثانوي</option>
              <option value="2">الصف الثاني الثانوي</option> 
              <option value="3">الصف الثالث الثانوي</option> 
            </select>
          </div> -->


          <div class="group">
            <label for="eduLevel" class="label">السنة الدراسية</label>
            <div class="wrapper">
              <select name="characters eduLevel" class="custom-select eduLevel" tabindex="1" id="eduLevel" reuired>
                  <option value="1">الصف الأول الثانوي</option>
                  <option value="2">الصف الثاني الثانوي</option>
                  <option value="3">الصف الثالث الثانوي</option>
              </select>
            </div>
          </div>


          <div class="group">
            <label for="phoneNumber" class="label">رقم موبايل الطالب</label>
            <input id="phoneNumber" name="phoneNumber" type="number" class="input form-control" pattern="^(010|011|012|015)\d{8}$" maxlength="11" required>
            <div class="invalid-feedback">
              الرجاء إدخال رقم الموبايل بشكل صحيح متضمنا 11 خانة
           </div>
           <div class="phoneError" style="color: rgb(222,56,69);">
           </div>
          </div>


          <div class="group">
            <label for="parentPhoneNumber" class="label">رقم موبايل ولي الأمر</label>
            <input id="parentPhoneNumber" name="parentPhoneNumber" type="number" class="input form-control" pattern="^(010|011|012|015)\d{8}$" maxlength="11" required>
            <div class="invalid-feedback">
            الرجاء إدخال رقم الموبايل بشكل صحيح متضمنا 11 خانة
            </div>
            <div class="parentPhoneError" style="color: rgb(222,56,69);">
            </div>          
          </div>

          
          <!-- <div class="group">
            <label for="password" class="label">العنوان</label>
            <input id="password" name="password" type="password" class="input password error" data-type="password" required>
            <div class="errorPassword"></div>
          </div> -->
          <div class="group">
            <input type="submit" class="button" value="اشترك الآن">
          </div>
          <div class="hr"></div>
          <div><span style="color: rgb(135, 176, 248);">لديك حساب بالفعل !! </span><a href="/login">سجل دخولك الآن</a></div>
        </div>
        </form>
				

			<div class="for-pwd-htm">
				<div class="group">
					<label for="user" class="label">رقم الموبايل</label>
					<input id="user" type="text" class="input">
				</div>
				<div class="group">
					<input type="submit" class="button" value="إعادة ضبط كلمة المرور">
				</div>
				<div class="hr"></div>
			</div>
		</div>
	</div>
</div>






<%- include("partials/footer.ejs") -%>

<%- include("partials/jsScripts.ejs") -%>

<script>

document.addEventListener('DOMContentLoaded', function() {
  //  document.querySelector('.invalid-feedback').style.display = 'none';
  const form = document.querySelector('form');
  
  const firstNameElement = document.getElementById("firstName");
  const lastNameElement = document.getElementById("lastName");
  const passwordElement = document.getElementById("password");
  const phoneNumberElement = document.getElementById("phoneNumber");
  const parentPhoneNumberElement = document.getElementById("parentPhoneNumber");
  const ageElement = document.getElementById("age");
  const eduLevelElement = document.getElementById("eduLevel");

  const emailError = document.querySelector('.email.error');
  const phoneError = document.querySelector('.phoneError');
  const parentPhoneError = document.querySelector('.parentPhoneError');

  // first name validation
  firstNameElement.addEventListener('input', function(e) {
  e.preventDefault();
  const firstNameValue = firstNameElement.value;
  // console.log(firstNameValue);
  if(firstNameValue.trim() === ''){
    firstNameElement.classList.remove("is-valid");
    firstNameElement.classList.add("is-invalid");
  }else{
    if (/[^a-zA-Z]/.test(firstNameValue)) {
    firstNameElement.classList.remove("is-valid");
    firstNameElement.classList.add("is-invalid");
  }else {
    firstNameElement.classList.remove("is-invalid");
    firstNameElement.classList.add("is-valid");
  }
  }
});

// last name validation
lastNameElement.addEventListener('input', function(e) {
  e.preventDefault();
  const lastNameValue = lastNameElement.value;
  // console.log(lastNameValue);
  if(lastNameValue.trim() === ''){
    lastNameElement.classList.remove("is-valid");
    lastNameElement.classList.add("is-invalid");
  }else{
  if (/[^a-zA-Z]/.test(lastNameValue)) {
    lastNameElement.classList.remove("is-valid");
    lastNameElement.classList.add("is-invalid");
  } else {
    lastNameElement.classList.remove("is-invalid");
    lastNameElement.classList.add("is-valid");
  }
  }
});


// password validation
passwordElement.addEventListener('input', function(e) {
  e.preventDefault();
  const passwordValue = passwordElement.value;
  console.log(passwordValue);
  console.log(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/.test(passwordValue));
  
  if(passwordValue.trim() === ''){
    passwordElement.classList.remove("is-valid");
    passwordElement.classList.add("is-invalid");
  }else{
    // const passwordRegex = "/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/";
    if (/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@!%#?&.])[A-Za-z\d@!%#?&.]{8,}$/.test(passwordValue)) {
      passwordElement.classList.remove("is-invalid");
      passwordElement.classList.add("is-valid");
    } else {
      passwordElement.classList.remove("is-valid");
      passwordElement.classList.add("is-invalid");
    }
  }
});



// phone validation
phoneNumberElement.addEventListener('input', function(e) {
  e.preventDefault();
  const phoneValue = phoneNumberElement.value;
  // console.log(phoneValue);
  
  if(phoneValue.trim() === ''){
    phoneNumberElement.classList.remove("is-valid");
    phoneNumberElement.classList.add("is-invalid");
  }else{
    if (/^(010|011|012|015)\d{8}$/.test(phoneValue)) {
      phoneNumberElement.classList.remove("is-invalid");
      phoneNumberElement.classList.add("is-valid");
    } else {
      phoneNumberElement.classList.remove("is-valid");
      phoneNumberElement.classList.add("is-invalid");
    }
  }
});

// parentPhone validation
parentPhoneNumberElement.addEventListener('input', function(e) {
  e.preventDefault();
  const parentPhoneValue = parentPhoneNumberElement.value;
  // console.log(phoneValue);
  
  if(parentPhoneValue.trim() === ''){
    parentPhoneNumberElement.classList.remove("is-valid");
    parentPhoneNumberElement.classList.add("is-invalid");
  }else{
    if (/^(010|011|012|015)\d{8}$/.test(parentPhoneValue)) {
      parentPhoneNumberElement.classList.remove("is-invalid");
      parentPhoneNumberElement.classList.add("is-valid");
    } else {
      parentPhoneNumberElement.classList.remove("is-valid");
      parentPhoneNumberElement.classList.add("is-invalid");
    }
  }
});

// age validation
ageElement.addEventListener('input', function(e) {
  e.preventDefault();
  const ageValue = ageElement.value;
  
  if(ageValue.trim() === ''){
    ageElement.classList.remove("is-valid");
    ageElement.classList.add("is-invalid");
  }else{
    if (/^(1[0-9]|10)$/.test(ageValue)) {
      ageElement.classList.remove("is-invalid");
      ageElement.classList.add("is-valid");
    } else {
      ageElement.classList.remove("is-valid");
      ageElement.classList.add("is-invalid");
    }
  }
});

// at submit button and email checking

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    emailError.textContent = '';
    phoneError.textContent = '';
    parentPhoneError.textContent = '';
    // get values
    console.log(form);
    const email = form.email.value;
    const password = form.password.value;
    const firstName = form.firstName.value;
    const lastName = form.lastName.value;
    const age = form.age.value;
    const phoneNumber = form.phoneNumber.value;
    const parentPhoneNumber = form.parentPhoneNumber.value;
    const educationalLevel = form.eduLevel.value;

    const firstNameElement = document.getElementById("firstName");
    const lastNameElement = document.getElementById("lastName");
    const passwordElement = document.getElementById("password");
    const phoneNumberElement = document.getElementById("phoneNumber");
    const parentPhoneNumberElement = document.getElementById("parentPhoneNumber");
    const ageElement = document.getElementById("age");
    const eduLevelElement = document.getElementById("eduLevel");


    try {
      if(parentPhoneNumber === phoneNumber){
        parentPhoneError.textContent = 'لا يمكن لرقم ولي الأمر ورقم الطالب أن يكونوا متطابقين';
      }else{
        if(email === '' || password === '' || firstName === '' || lastName === '' || age === '' || phoneNumber === '' || parentPhoneNumber === '' ){
          parentPhoneError.textContent = 'برجاء مليء كافة البيانات';
        }
        if(firstNameElement.classList.contains('invalid-feedback') || lastNameElement.classList.contains('invalid-feedback') || passwordElement.classList.contains('invalid-feedback') || 
        phoneNumberElement.classList.contains('invalid-feedback') || parentPhoneNumberElement.classList.contains('invalid-feedback') || ageElement.classList.contains('invalid-feedback') ){
          parentPhoneError.textContent = 'برجاء التحقق من كافة البيانات';
        }
        else{
          const res = await fetch ("/signup", {
        method: "POST",
        body: JSON.stringify({ firstName, lastName, email , password, age, phoneNumber, parentPhoneNumber, educationalLevel}),
        headers: {"Content-Type":"application/json"}
      });
        const data = await res.json();
        // console.log(data);
        
        //validation for incorrect email
        if (data.message) {
          // console.log(data);
          // console.log(data.errors);
          // console.log(data.message);
          emailError.textContent = data.message;
          phoneError.textContent = data.message;
          parentPhoneError.textContent = data.message;
          }

        //validation for duplicated email
        if (data.errors) {
            // console.log(data);
            emailError.textContent = data.errors.email;
            phoneNumberElement.classList.remove("is-invalid");
            phoneError.textContent = '';
            phoneError.textContent = data.errors.phoneNumber;
            console.log(data.errors.phoneNumber);
            parentPhoneNumberElement.classList.remove("is-invalid");
            parentPhoneError.textContent = '';
            parentPhoneError.textContent = data.errors.phoneNumber;
            console.log(data.errors.parentPhoneError);
            // passwordError.textContent = data.errors.password;
          }

          // //validation for invalid last name
          // if (data.message) {
          // // console.log(data);
          // // console.log(data.errors);
          // // console.log(data);
          // lastNameError.textContent = data;
          // }

        if(data.student){

          // to signup manually by updating the cookie to be empty and have very very short time expiration 

          location.assign("/login");
        }


        }
        
      }

      

}   catch (error) {
  
}

  });


});
</script>
<script src="/assets/signupSelectStyle.js"></script>
</body>
</html>